#!/usr/bin/env zsh
#%SUMMARY: central control panel
#%USAGE: $ ./$0 <cmd>
set -o errexit -o noclobber -o noglob -o nounset -o pipefail
setopt warn_nested_var warn_create_global
setopt local_options no_function_argzero
cd $0:A:h
declare -A fn_alias


fn_alias[pkg]=install-develop
function install-develop {
  makepkg PKGBUILD --syncdeps --clean --install --noconfirm --force
}


fn_alias[i]=cli
function cli {
  # TRY:FAIL? --eval "(setf (readtable-case *readtable*) :preserve)" \
  rlwrap sbcl --noinform --eval '(require :asdf)' --eval "(progn
    (push '*default-pathname-defaults* asdf:*central-registry*)
    (asdf:load-system :miur)
  )"
}


fn_alias[s]=swank
function swank {
  print "USAGE: M-x slime-connect <Enter><Enter> DFL:(port 4005)"
  # MAYBE: use here:  --non-interactive
  exec sbcl --noinform --load ./loader.lisp
}

fn_alias[b]=mkexe
function mkexe {
  # --no-sysinit --no-userinit
  # (sb-ext:disable-debugger)
  # :compression t
  sbcl --noinform --non-interactive --disable-debugger \
    --eval "(require :asdf)" \
    --eval "(push '*default-pathname-defaults* asdf:*central-registry*)" \
    --eval "(asdf:load-system :miur)" \
    --eval "(sb-ext:save-lisp-and-die \"miur.bin\" :toplevel 'miur:main :executable t :purify t)"
}


function _Main {
  if ((!$#)); then
    sed -rn '1d;/^(.*\\s)?#%/s///p' "$0"
    print "VIZ: ${(k)functions}"
    # print -lDaC2 -- ${(kv)functions_source}
    exit 0
  fi

  local cmd=$1
  shift

  local fn=$cmd
  while (($+fn_alias[$fn])); do fn=$fn_alias[$fn]; done
  if ((!$+functions[$fn])); then
    >&2 print "Err:(cmd=$cmd): not found fn=$fn"
    exit 1
  fi

  $fn $@
}

_Main $@
