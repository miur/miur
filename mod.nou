%%%%% Modules
All and only components are plugins

Modular system
  How to combine all of components inside distribution ecosystem ?
    = components in different languages
    = developer must be able to combine local bundle for testing without installing
    = choose one of alternative components (language / impl details / name)
      how to discover their existance ?
        rehash all possible plugins dirs/types only on demand -- and cache 'used' list (neovim-like)
      choice based on
        cmdline flags
        global config
    >> use mods mgmt for plugins
  REF
    http://www.curiousefficiency.org/posts/2016/09/python-packaging-ecosystem.html#my-core-software-ecosystem-design-philosophy


Mods mgmt
  [_] TODO: investigate other plugin systems
      mc, sublime
  Structure (vim-like)
    runtime
      distributed with *core*
    site
      native packaging (pacman)
    xdg
      embedded framework for mods mgmt (vim8.0 / dein.nvim)
    user
      manually installed 'unmanaged' mods
