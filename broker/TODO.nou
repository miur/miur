SPDX-FileCopyrightText: 2020 Dmytro Kolomoiets <amerlyq@gmail.com> and contributors.

SPDX-License-Identifier: CC-BY-SA-4.0
-----
%%%% broker


TODO:DEV:
  [_] FAIL: default broker_thread() device uses 100% CPU in its thread
    REF: https://pyzmq.readthedocs.io/en/latest/devices.html
    https://stackoverflow.com/questions/21935515/how-to-avoid-high-cpu-usage
  [_] hub must inject broadcast msg "hub {pub|sub} [dis]connected <module>"
    BUT: can ZMQ identify individual sockets ? I don't think so...
  [_] ENH: use clone{srv,cli}5.py :: PUB+ROUTER+PULL server
    http://zguide.zeromq.org/py:all#Reliable-Pub-Sub-Clone-Pattern
  [_] MAYBE: ctl (conntrol) socket to control flow from logger/etc.
  [_] FIXED: +++ https://stackoverflow.com/questions/30864145/zmq-no-subscription-message-on-xpub-socket-for-multiple-subscribers-last-value/30975378
    ::: hub.setsockopt_out(zmq.XPUB_VERBOSE, True)
  [_] CHECK: drain all messages from queue on reconnect before loop
    e.g. msgs with timestamp less then ./hub starttime
    => otherwise on ./hub restart it will get and replay all messages, already obsolete at that moment
  [_] Use incoming and outgoing channels from single socket
    TRY:PERF: pass io/ev events to same pub/sub bus and filter them solely by *mod* prefix
    e.g. "input.keyboard" and "output.ui"


DECI: Custom .vs. generic broker
  BET? zeromq/malamute IMPL broker patterns
    https://github.com/zeromq/malamute
  OR: zeromq/majordomo IMPL clients <-> services
    https://github.com/zeromq/majordomo
  CHG: use broker only as discovery service
    http://wiki.zeromq.org/whitepapers:brokerless#toc3


READ: data transfer
  SRC: zeromq/filemq IMPL file transfering on request
    https://github.com/zeromq/filemq
  NICE:READ: Revisting ZeroMQ Multipart - Hintjens.com
    http://hintjens.com/blog:84
  100% CPU usage with pyzmq socket when sending huge data. · Issue #887 · zeromq/pyzmq
    https://github.com/zeromq/pyzmq/issues/887
  I/O Threads - ZeroMQ [Book]
    https://www.oreilly.com/library/view/zeromq/9781449334437/ch02s01s05.html
    https://stackoverflow.com/questions/45154956/zmq-context-should-i-create-another-context-in-a-new-thread
    ::: context with one background I/O thread per 1GiB/sec data


INFO
  XSUB+XPUB
    +++ Design of PUB/SUB subsystem in ØMQ - 250bpm
      http://250bpm.com/pubsub
    Trivia
     XPUB is similar to a PUB socket, except that you can receive messages from it.
       The messages you receive are the subscriptions traveling upstream.
     XSUB is similar to SUB except that you subscribe by sending a subscription message to it.
       fmt ::= {0|1} NULL 'topic'
    ERR: PUB-XSUB can't subscibe => send 0x01 byte instead
      http://derpturkey.com/zeromq-subscribe-with-xsub/
    zeromq - What can an XSUB-XPUB broker do than a SUB-PUB broker can't? - Stack Overflow
      https://stackoverflow.com/questions/48566810/what-can-an-xsub-xpub-broker-do-than-a-sub-pub-broker-cant
      ::: you can use simple PUB-SUB if any of your clients had subscribed to "" everything
  PULL+XPUB
    https://github.com/zeromq/libzmq/issues/2267
  NOTE: queue .vs. forwarder
    https://learning-0mq-with-pyzmq.readthedocs.io/en/latest/pyzmq/devices/queue.html
    https://learning-0mq-with-pyzmq.readthedocs.io/en/latest/pyzmq/devices/forwarder.html
    ::: we don't need MonitoredForwarder -- simply connect monitor as one of subscribers
      [$] TODO: cap (capture) or mon (monitor) socket to redirect everything to external logger module
      BET: connect logger as any other module but with SUB('')
