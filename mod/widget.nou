%%%%% Widgets

SEE
  Xmonad modules for abstractions


Widgets
  INFO
    = Equivalent to containers from qt
      !! but I don't want to re-implement whole qt for tui
    = Nesting: embed widgets in each other
      fm <- slice <- entry <- attr
  VIZ.
    status bars
    preview
    slice
      entry
        attr


View
  each *ui* reimplements all necessary widgets from scratches
  containers layout + widgets (quering info from DOM)
  VIZ.
    single window placeholder
    tmux-like windows combining
      custom one-panel with 5 micro preview at bottom for each path element
    simulate table / spreadsheet
      each window for some attribute
      allows sorting by attribute

ALT => use Xmonad to manage windows itself
  reorganize and control them as you wish
  server shares core data
  each window contains only single widget
  file preview, manager, etc -- single window
  allows to combine TUI fm with GUI viewer
    but gui viewer must be launched as server to update when new files opened
      select to reuse already opened viewer or open new instance
      then specify which one use to open successive files (DFL: last opened)


Slice
  ranger-like three/N panels deep
  xplorer-like tree with +/- structure
  tmux/tile-wm-like panels opening
    total-commander like two panels
    quadro-commander like four-panels


Preview
  short preview on right
  sublime-like dir/file preview
  allow preview to represent custom info
    allow info directly from python libs, not only from scope.sh
    (option) embed pygment -- no overhead on its calls
    embed/server with pandoc
  extended viewer on 'i'
    ~ same script with additional flags
    ~ completely another script-aggregator
